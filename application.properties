logging.level.root=INFO 
management.endpoints.web.exposure.include=health,info,prometheus,integrationgraph,metrics

#Redis
cros.redis.url=ignore

#Finacle Legacy endpoints
finacle.api.xml.url=ignore
finacle.api.xml.endPoint=/FISERVLET/fihttp

# Kafka Consumer Configuration for GAM Events
cros-account-master-events.kafka.consumer.bootstrap-servers = ignore
cros-account-master-events.kafka.consumer.value-deserializer = com.kmbl.cros.accountinquiryservice.service.kafka.serializers.CbsGamDeserializer
cros-account-master-events.kafka.consumer.topic = cros-account-master-events
cros-account-master-events.kafka.consumer.group-id = CROS-Balance-Events
cros-account-master-events.kafka.consumer.security-protocol = AWS_MSK_IAM
cros-account-master-events.kafka.consumer.dlq-config.dlq-topic = cros-account-master-events-dlq
cros-account-master-events.kafka.consumer.dlq-config.value-serializer = com.kmbl.cros.accountinquiryservice.service.kafka.serializers.CbsAvroSerializer


# Kafka Consumer Configuration for DTD Events
cros-transaction-events.kafka.consumer.bootstrap-servers = ignore
cros-transaction-events.kafka.consumer.value-deserializer = com.kmbl.cros.accountinquiryservice.service.kafka.serializers.CbsDtdDeserializer
cros-transaction-events.kafka.consumer.topic = cros-transaction-events
cros-transaction-events.kafka.consumer.group-id = CROS-Transaction-Events
cros-transaction-events.kafka.consumer.security-protocol = AWS_MSK_IAM

cros-account-master-events.kafka.consumer.deferred-commit-config.commit-batch-size=100
cros-account-master-events.kafka.consumer.deferred-commit-config.commit-interval-millis=2000
cros-account-master-events.kafka.consumer.deferred-commit-config.max-deferred-commits=500
cros-account-master-events.kafka.consumer.in-memory-partitions=10
cros-account-master-events.kafka.consumer.max-poll-records=1000
cros-account-master-events.kafka.consumer.processor-thread-pool-name=ros-gam-kafka

cros-transaction-events.kafka.consumer.deferred-commit-config.commit-batch-size=100
cros-transaction-events.kafka.consumer.deferred-commit-config.commit-interval-millis=2000
cros-transaction-events.kafka.consumer.deferred-commit-config.max-deferred-commits=500
cros-transaction-events.kafka.consumer.in-memory-partitions=10
cros-transaction-events.kafka.consumer.max-poll-records=1000
cros-transaction-events.kafka.consumer.processor-thread-pool-name=ros-dtd-kafka
cros-transaction-events.kafka.consumer.dlq-config.dlq-topic = cros-transaction-events-dlq
cros-transaction-events.kafka.consumer.dlq-config.value-serializer = com.kmbl.cros.accountinquiryservice.service.kafka.serializers.CbsAvroSerializer

cros-smt-events.kafka.consumer.topic= cros-savings-accounts-events
cros-cmg-events.kafka.consumer.topic= cros-customer-master-events
cros-aas-events.kafka.consumer.topic= cros-account-aas-events
# Lazy Loading
cros.lazyLoading.enabled=false

#DynamoDb configurations
aws.dynamodb.endpointOverride=ignore
aws.accessKeyOverride=ignore
aws.secretKeyOverride=ignore
aws.cloudwatch.endpointOverride=ignore
aws.cloudwatch.namespace=kotak-cros-services

# Transactions inquiry data comparison percentage rollout.
transactions.comparison.percentage.rollout=1

# Account Balance Inquiry data comparison percentage rollout
balanceInquiry.comparison.percentage.rollout=1

# Accounts Inquiry data comparison percentage rollout, decrease once rollout percentage increases
accountsinquiry.comparison.percentage.rollout=50

cros.redis.permits-per-second=10
cros.redis.timeout-in-millisecond=10000
cros.redis.request-timeout-ms: 100
